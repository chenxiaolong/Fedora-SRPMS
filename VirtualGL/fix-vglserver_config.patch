- Disable xtest using xorg.conf.d (much better than previous method of altering
  the Xorg command line in the configuration files of display managers, which
  does doesn't even work anymore)
- Remove code for: 
  * other Unix-like operating systems
  * modifying: 
    - /etc/security/console.perms.d/50-default.perms - which has been removed
      since Fedora 10
    - /etc/logindevperm
    - /etc/X11/XF86Config
    - /etc/X11/gdm/gdm.conf
    - /etc/opt/gnome/gdm/gdm.conf
    - /etc/inittab - Fedora uses systemd.
  * removing /etc/modprobe.d/virtualgl (created by previous versions of 
    VirtualGL, which weren't even packaged for Fedora)
  * enabling XTest using gdm, kdm, or xdm
- Fix path: 
  * /bin/sh -> /bin/bash
  * /etc/modprobe.d/nvidia -> /etc/modprobe.d/nvidia.conf
  * /etc/opt/VirtualGL/ -> /etc/VirtualGL/
  * /etc/kde4/ -> /etc/kde/
- Do not add vglusers group. This is handled in the %post scriptlet
diff -Nru VirtualGL-2.3.2.orig/server/vglserver_config VirtualGL-2.3.2/server/vglserver_config
--- VirtualGL-2.3.2.orig/server/vglserver_config	2012-10-12 15:38:39.797410145 -0400
+++ VirtualGL-2.3.2/server/vglserver_config	2012-10-12 17:57:45.800098963 -0400
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/bin/bash
 
 # Copyright (C)2007 Sun Microsystems, Inc.
 # Copyright (C)2009-2012 D. R. Commander
@@ -215,54 +215,25 @@
 }	
 
 disablextest() {
-	if [ -z "$1" ]; then
-		echo USAGE: disablextest {filename}
-		return
-	fi
-	backup $1
-	echo ... Disabling XTEST extension in $1 ...
+	backup /etc/X11/xorg.conf.d/00-disable-xtest.conf
+	echo ... Disabling XTEST extension ...
+
 	TMPFILE=`maketemp vglserver_config_7`
-	sed -e "/\/X11\/X\>/s/[ #\t]*-tst//g" -e "/\/bin\/X\>/s/[ #\t]*-tst//g" -e "/\/bin\/Xorg\>/s/[ #\t]*-tst//g" -e "/\/bin\/Xsun\>/s/[ #\t]*-tst//g" -e "/\/bin\/Xserver\>/s/[ #\t]*-tst//g" $1 >$TMPFILE && cp $TMPFILE $1 && (
-		sed -e "/\/X11\/X\>/s/$/\ -tst/g" -e "/\/bin\/X\>/s/$/\ -tst/g" -e "/\/bin\/Xorg\>/s/$/\ -tst/g" -e "/\/bin\/Xsun\>/s/$/\ -tst/g" -e "/\/bin\/Xserver\>/s/$/\ -tst/g" $1 >$TMPFILE && cp $TMPFILE $1
-	)
-	if [ -f $TMPFILE ]; then rm $TMPFILE; fi
-}
 
-disablextestkdm() {
-	if [ -z "$1" ]; then
-		echo USAGE: disablextestkdm {filename}
-		return
-	fi
-	backup $1
-	echo ... Disabling XTEST extension in $1 ...
-	TMPFILE=`maketemp vglserver_config_12`
-	uncommentline $1 ServerArgsLocal
-	sed -e "/ServerArgsLocal\>/s/[ #\t]*-tst//g" $1 >$TMPFILE && cp $TMPFILE $1 && (
-		sed -e "/ServerArgsLocal\>/s/$/\ -tst/g" $1 >$TMPFILE && cp $TMPFILE $1
-	)
-	if [ -f $TMPFILE ]; then rm $TMPFILE; fi
+	cat > ${TMPFILE} << EOF
+Section "Extensions"
+	Option "XTEST" "Disable"
+EndSection
+EOF
+	cp ${TMPFILE} /etc/X11/xorg.conf.d/00-disable-xtest.conf
+	if [ -f ${TMPFILE} ]; then rm ${TMPFILE}; fi
 }
 
 enablextest() {
-	if [ -z "$1" ]; then
-		echo USAGE: enablextest {filename}
-		return
+	echo ... Enabling XTEST extension ...
+	if [ -f /etc/X11/xorg.conf.d/00-disable-xtest.conf ]; then
+		rm /etc/X11/xorg.conf.d/00-disable-xtest.conf
 	fi
-	echo ... Enabling XTEST extension in $1 ...
-	TMPFILE=`maketemp vglserver_config_8`
-	sed -e "/\/X11\/X\>/s/[ #\t]*-tst//g" -e "/\/bin\/X\>/s/[ #\t]*-tst//g" -e "/\/bin\/Xorg\>/s/[ #\t]*-tst//g" -e "/\/bin\/Xsun\>/s/[ #\t]*-tst//g" -e "/\/bin\/Xserver\>/s/[ #\t]*-tst//g" $1 >$TMPFILE && cp $TMPFILE $1
-	if [ -f $TMPFILE ]; then rm $TMPFILE; fi
-}
-
-enablextestkdm() {
-	if [ -z "$1" ]; then
-		echo USAGE: enablextestkdm {filename}
-		return
-	fi
-	echo ... Enabling XTEST extension in $1 ...
-	TMPFILE=`maketemp vglserver_config_11`
-	sed -e "/ServerArgsLocal\>/s/[ #\t]*-tst//g" $1 >$TMPFILE && cp $TMPFILE $1
-	if [ -f $TMPFILE ]; then rm $TMPFILE; fi
 }
 
 disallowgdmtcp() {
@@ -298,118 +269,73 @@
 }
 
 unconfigdev() {
-	if [ "$UNAME_S" = "SunOS" ]; then
-		echo ... Modifying /etc/logindevperm to enable automatic permissions for
-		echo "    /dev/fbs/* ..."
-		uncommentline /etc/logindevperm "\/dev\/console.*\/dev\/fbs"
-	elif [ "$UNAME_S" = "Linux" ]; then
-		if [ -f /etc/security/console.perms ]; then
-			echo ... Modifying /etc/security/console.perms to enable automatic permissions
-			echo "    for DRI devices ..."
-			uncommentline /etc/security/console.perms "\<dri\>"
-		fi
-		if [ -f /etc/security/console.perms.d/50-default.perms ]; then
-			echo ... Modifying /etc/security/console.perms.d/50-default.perms to enable automatic permissions
-			echo "    for DRI devices ..."
-			uncommentline /etc/security/console.perms.d/50-default.perms "\<dri\>"
-		fi
-		if [ -f /etc/logindevperm ]; then
-			echo ... Modifying /etc/logindevperm to enable automatic permissions for
-			echo "    /dev/nvidia* ..."
-			uncommentline /etc/logindevperm "\/dev\/nvidia"
-		fi
-		if [ -f /etc/modprobe.d/virtualgl.conf -o -f /etc/modprobe.d/virtualgl ]; then
-			echo ... Removing /etc/modprobe.d/virtualgl.conf to restore default permissions for
-			echo "    /dev/nvidia* ..."
-			rm -f /etc/modprobe.d/virtualgl
-			rm -f /etc/modprobe.d/virtualgl.conf
-			$LSMOD | grep -q nvidia >/dev/null 2>/dev/null
-			if [ $? = 0 ]; then
-				echo ... Attempting to remove nvidia module from memory so device permissions
-				echo "    will be reloaded ..."
-				$RMMOD nvidia || RMMODNEEDED=1
-			fi
-
+	if [ -f /etc/security/console.perms ]; then
+		echo ... Modifying /etc/security/console.perms to enable automatic permissions
+		echo "    for DRI devices ..."
+		uncommentline /etc/security/console.perms "\<dri\>"
+	fi
+	if [ -f /etc/modprobe.d/virtualgl.conf ]; then
+		echo ... Removing /etc/modprobe.d/virtualgl.conf to restore default permissions for
+		echo "    /dev/nvidia* ..."
+		rm -f /etc/modprobe.d/virtualgl.conf
+		$LSMOD | grep -q nvidia >/dev/null 2>/dev/null
+		if [ $? = 0 ]; then
+			echo ... Attempting to remove nvidia module from memory so device permissions
+			echo "    will be reloaded ..."
+			$RMMOD nvidia || RMMODNEEDED=1
 		fi
 	fi
 }
 
 configdev() {
-	if [ "$UNAME_S" = "SunOS" ]; then
-		echo ... Modifying /etc/logindevperm to disable automatic permissions for
-		echo "    /dev/fbs/* ..."
-		commentline /etc/logindevperm "\/dev\/console.*\/dev\/fbs"
-		chmod 755 /dev/fbs
-		if [ "$FBDEVVGLUSERSONLY" = "1" ]; then
-			echo ... Granting write permission to /dev/fbs/\* for vglusers group ...
-			chmod 660 /dev/fbs/*
-			chown root:vglusers /dev/fbs/*
+	if [ -f /etc/security/console.perms ]; then
+		echo ... Modifying /etc/security/console.perms to disable automatic permissions
+		echo "    for DRI devices ..."
+		commentline /etc/security/console.perms "\<dri\>"
+	fi
+	if [ -d /etc/modprobe.d ]; then
+		if [ -f /etc/modprobe.d/nvidia.conf ]; then
+			echo ... Modifying /etc/modprobe.d/nvidia.conf to set requested permissions for
 		else
-			echo ... Granting write permission to /dev/fbs/\* for all users ...
-			chmod 666 /dev/fbs/*
-			chown root:root /dev/fbs/*
-		fi
-	elif [ "$UNAME_S" = "Linux" ]; then
-		if [ -f /etc/security/console.perms ]; then
-			echo ... Modifying /etc/security/console.perms to disable automatic permissions
-			echo "    for DRI devices ..."
-			commentline /etc/security/console.perms "\<dri\>"
-		fi
-		if [ -f /etc/security/console.perms.d/50-default.perms ]; then
-			echo ... Modifying /etc/security/console.perms.d/50-default.perms to disable automatic permissions
-			echo "    for DRI devices ..."
-			commentline /etc/security/console.perms.d/50-default.perms "\<dri\>"
-		fi
-		if [ -f /etc/logindevperm ]; then
-			echo ... Modifying /etc/logindevperm to disable automatic permissions for
-			echo "    /dev/nvidia* ..."
-			commentline /etc/logindevperm "\/dev\/nvidia"
-		fi
-		if [ -d /etc/modprobe.d ]; then
-			if [ -f /etc/modprobe.d/nvidia ]; then
-				echo ... Modifying /etc/modprobe.d/nvidia to set requested permissions for
+			echo ... Creating /etc/modprobe.d/virtualgl.conf to set requested permissions for
+		fi
+		echo "    /dev/nvidia* ..."
+		VGLUSERSGID=`grep vglusers /etc/group | cut -f3 -d:`
+		if [ -f /etc/modprobe.d/nvidia.conf ]; then
+			if [ "$FBDEVVGLUSERSONLY" = "1" -a ! "$VGLUSERSGID" = "" ]; then
+				replaceline /etc/modprobe.d/nvidia.conf "options nvidia" "options nvidia NVreg_DeviceFileUID=0 NVreg_DeviceFileGID=$VGLUSERSGID NVreg_DeviceFileMode=0660"
 			else
-				echo ... Creating /etc/modprobe.d/virtualgl.conf to set requested permissions for
+				replaceline /etc/modprobe.d/nvidia.conf "options nvidia" "options nvidia NVreg_DeviceFileUID=0 NVreg_DeviceFileGID=0 NVreg_DeviceFileMode=0666"
 			fi
-			echo "    /dev/nvidia* ..."
-			VGLUSERSGID=`grep vglusers /etc/group | cut -f3 -d:`
-			if [ -f /etc/modprobe.d/nvidia ]; then
-				if [ "$FBDEVVGLUSERSONLY" = "1" -a ! "$VGLUSERSGID" = "" ]; then
-					replaceline /etc/modprobe.d/nvidia "options nvidia" "options nvidia NVreg_DeviceFileUID=0 NVreg_DeviceFileGID=$VGLUSERSGID NVreg_DeviceFileMode=0660"
-				else
-					replaceline /etc/modprobe.d/nvidia "options nvidia" "options nvidia NVreg_DeviceFileUID=0 NVreg_DeviceFileGID=0 NVreg_DeviceFileMode=0666"
-				fi
+		else
+			if [ "$FBDEVVGLUSERSONLY" = "1" -a ! "$VGLUSERSGID" = "" ]; then
+				echo "options nvidia NVreg_DeviceFileUID=0 NVreg_DeviceFileGID=$VGLUSERSGID NVreg_DeviceFileMode=0660" >/etc/modprobe.d/virtualgl.conf
 			else
-				if [ "$FBDEVVGLUSERSONLY" = "1" -a ! "$VGLUSERSGID" = "" ]; then
-					echo "options nvidia NVreg_DeviceFileUID=0 NVreg_DeviceFileGID=$VGLUSERSGID NVreg_DeviceFileMode=0660" >/etc/modprobe.d/virtualgl.conf
-				else
-					echo "options nvidia NVreg_DeviceFileUID=0 NVreg_DeviceFileGID=0 NVreg_DeviceFileMode=0666" >/etc/modprobe.d/virtualgl.conf
-				fi
-				chmod 644 /etc/modprobe.d/virtualgl.conf
-			fi
-			$LSMOD | grep -q nvidia >/dev/null 2>/dev/null
-			if [ $? = 0 ]; then
-				echo ... Attempting to remove nvidia module from memory so device permissions
-				echo "    will be reloaded ..."
-				$RMMOD nvidia || RMMODNEEDED=1
+				echo "options nvidia NVreg_DeviceFileUID=0 NVreg_DeviceFileGID=0 NVreg_DeviceFileMode=0666" >/etc/modprobe.d/virtualgl.conf
 			fi
+			chmod 644 /etc/modprobe.d/virtualgl.conf
 		fi
-		if [ "$FBDEVVGLUSERSONLY" = "1" ]; then
-			if [ -e /dev/nvidia0 -o -e /dev/nvidiactl ]; then
-				echo ... Granting write permission to /dev/nvidia* for vglusers group ...
-				chmod 660 /dev/nvidia*
-				chown root:vglusers /dev/nvidia*
-			fi
-		else
-			if [ -e /dev/nvidia0 -o -e /dev/nvidiactl ]; then
-				echo ... Granting write permission to /dev/nvidia* for all users ...
-				chmod 666 /dev/nvidia*
-				chown root:root /dev/nvidia*
-			fi
+		$LSMOD | grep -q nvidia >/dev/null 2>/dev/null
+		if [ $? = 0 ]; then
+			echo ... Attempting to remove nvidia module from memory so device permissions
+			echo "    will be reloaded ..."
+			$RMMOD nvidia || RMMODNEEDED=1
+		fi
+	fi
+	if [ "$FBDEVVGLUSERSONLY" = "1" ]; then
+		if [ -e /dev/nvidia0 -o -e /dev/nvidiactl ]; then
+			echo ... Granting write permission to /dev/nvidia* for vglusers group ...
+			chmod 660 /dev/nvidia*
+			chown root:vglusers /dev/nvidia*
+		fi
+	else
+		if [ -e /dev/nvidia0 -o -e /dev/nvidiactl ]; then
+			echo ... Granting write permission to /dev/nvidia* for all users ...
+			chmod 666 /dev/nvidia*
+			chown root:root /dev/nvidia*
 		fi
-		setdripermissions /etc/X11/xorg.conf
-		setdripermissions /etc/X11/XF86Config
 	fi
+	setdripermissions /etc/X11/xorg.conf
 }
 
 ynprompt() {
@@ -432,9 +358,9 @@
 
 unconfigglx() {
 	echo ... Removing /etc/opt/VirtualGL directory ...
-	if [ -d /etc/opt/VirtualGL ]; then
-		rm /etc/opt/VirtualGL/* 2>/dev/null
-		rmdir /etc/opt/VirtualGL
+	if [ -d /etc/VirtualGL ]; then
+		rm /etc/VirtualGL/* 2>/dev/null
+		rmdir /etc/VirtualGL
 	fi
 
 	if [ -f /etc/X11/xdm/Xsetup_0 -a ! -h /etc/X11/xdm/Xsetup_0 ]; then
@@ -444,24 +370,9 @@
 			delvglgenkey /etc/X11/xdm/Xsetup
 		fi
 	fi
-	if [ -f /etc/X11/gdm/Init/:0 ]; then
-		if [ ! -h /etc/X11/gdm/Init/:0 ]; then
-			delvglgenkey /etc/X11/gdm/Init/:0
-		fi
-	else
-		if [ -f /etc/X11/gdm/Init/Default -a ! -h /etc/X11/gdm/Init/Default ]; then
-			delvglgenkey /etc/X11/gdm/Init/Default
-		fi
-	fi
-	if [ -f /etc/X11/gdm/SunRayInit/Default ]; then
-		delvglgenkey /etc/X11/gdm/SunRayInit/Default
-	fi
 	for file in /etc/gdm/Init/Default \
-		/usr/local/etc/gdm/Init/Default \
-		/etc/opt/gnome/gdm/Init/Default \
-		/etc/kde4/kdm/Xsetup \
+		/etc/kde/kdm/Xsetup \
 		/usr/share/config/kdm/Xsetup \
-		/usr/local/kde4/share/config/kdm/Xsetup; do
 		if [ -f $file -a ! -h $file ]; then
 			delvglgenkey $file
 		fi
@@ -471,66 +382,10 @@
 		removeline /etc/lightdm/lightdm.conf display-setup-script
 	fi
 
-	if [ "$UNAME_S" = "SunOS" ]; then
-		if [ -f /etc/dt/config/Xsetup ]; then
-			delvglgenkey /etc/dt/config/Xsetup
-		fi
-		if [ -f /etc/dt/config/Xconfig ]; then
-			echo ... Restoring default value of Dtlogin\*grabServer in ...
-			echo "...     /etc/dt/config/Xconfig ..."
-			commentline /etc/dt/config/Xconfig Dtlogin\\*grabServer
-		fi
-		if [ -f /etc/dt/config/Xconfig.SUNWut.prototype ]; then
-			echo ... Restoring default value of Dtlogin\*grabServer in ...
-			echo "...     /etc/dt/config/Xconfig.SUNWut.prototype ..."
-			commentline /etc/dt/config/Xconfig.SUNWut.prototype Dtlogin\\*grabServer
-		fi
-	fi
+	enablextest
 
-	for file in /etc/X11/xdm/Xservers \
-		/etc/X11/gdm/gdm.conf \
-		/etc/gdm/custom.conf \
-		/usr/local/etc/gdm/custom.conf \
-		/etc/gdm/gdm.conf \
-		/etc/X11/gdm/custom.conf \
-		/etc/opt/gnome/gdm/gdm.conf \
-		/etc/opt/kde3/share/config/kdm/Xservers; do
-		if [ -f $file -a ! -h $file ]; then
-			enablextest $file
-		fi
-	done
-	if [ -f /etc/gdm/gdm-cdd.conf ]; then
-		enablextest /etc/gdm/gdm-cdd.conf
-	fi
-	for file in /etc/kde4/kdm/kdmrc \
-		/etc/kde/kdm/kdmrc \
-		/usr/share/config/kdm/kdmrc \
-		/usr/local/kde4/share/config/kdm/kdmrc; do
-		if [ -f $file -a ! -h $file ]; then
-			enablextestkdm $file
-		fi
-	done
-	if [ "$UNAME_S" = "SunOS" ]; then
-		if [ -f /etc/dt/config/Xservers ]; then
-			enablextest /etc/dt/config/Xservers
-		fi
-		if [ -x /usr/sbin/svccfg ]; then
-			/usr/sbin/svccfg -s application/x11/x11-server delpropvalue options/server_args "*-tst*" 2>&1 >/dev/null
-		fi
-	fi
-
-	for file in /etc/X11/gdm/gdm.conf \
-		/etc/gdm/custom.conf \
-		/usr/local/etc/gdm/custom.conf \
-		/etc/gdm/gdm.conf \
-		/etc/X11/gdm/custom.conf \
-		/etc/opt/gnome/gdm/gdm.conf; do
-		if [ -f $file -a ! -h $file ]; then
-			disallowgdmtcp $file
-		fi
-	done
-	if [ -f /etc/gdm/gdm-cdd.conf ]; then
-		disallowgdmtcp /etc/gdm/gdm-cdd.conf
+	if [ -f /etc/gdm/custom.conf -a ! -h /etc/gdm/custom.conf ]; then
+		disallowgdmtcp /etc/gdm/custom.conf
 	fi
 
 	unconfigdev
@@ -559,20 +414,13 @@
 	fi
 
 	if [ "$VGLUSERSONLY" = "1" ]; then
-		echo ... Creating vglusers group ...
-		if [ ! "$GID" = "" ]; then
-			$GROUPADD -g $GID vglusers || echo "Could not add vglusers group (probably because it already exists.)"
-		else
-			$GROUPADD vglusers || echo "Could not add vglusers group (probably because it already exists.)"
-		fi
-
-		if [ ! -d /etc/opt/VirtualGL ]; then
-			echo ... Creating /etc/opt/VirtualGL/ ...
-			mkdir -p /etc/opt/VirtualGL
-		fi
-		echo ... Granting read permission to /etc/opt/VirtualGL/ for vglusers group ...
-		chown root:vglusers /etc/opt/VirtualGL
-		chmod 750 /etc/opt/VirtualGL
+		if [ ! -d /etc/VirtualGL ]; then
+			echo ... Creating /etc/VirtualGL/ ...
+			mkdir -p /etc/VirtualGL
+		fi
+		echo ... Granting read permission to /etc/VirtualGL/ for vglusers group ...
+		chown root:vglusers /etc/VirtualGL
+		chmod 750 /etc/VirtualGL
 	fi
 
 	configdev
@@ -584,24 +432,9 @@
 			addvglgenkey /etc/X11/xdm/Xsetup
 		fi
 	fi
-	if [ -f /etc/X11/gdm/Init/:0 ]; then
-		if [ ! -h /etc/X11/gdm/Init/:0 ]; then
-			addvglgenkey /etc/X11/gdm/Init/:0
-		fi
-	else
-		if [ -f /etc/X11/gdm/Init/Default -a ! -h /etc/X11/gdm/Init/Default ]; then
-			addvglgenkey /etc/X11/gdm/Init/Default
-		fi
-	fi
-	if [ -f /etc/X11/gdm/SunRayInit/Default ]; then
-		addvglgenkey /etc/X11/gdm/SunRayInit/Default
-	fi
 	for file in /etc/gdm/Init/Default \
-		/usr/local/etc/gdm/Init/Default \
-		/etc/opt/gnome/gdm/Init/Default \
-		/etc/kde4/kdm/Xsetup \
-		/usr/share/config/kdm/Xsetup \
-		/usr/local/kde4/share/config/kdm/Xsetup; do
+		/etc/kde/kdm/Xsetup \
+		/usr/share/config/kdm/Xsetup; do
 		if [ -f $file -a ! -h $file ]; then
 			addvglgenkey $file
 		fi
@@ -610,124 +443,15 @@
 		addvglgenkey_lightdm /etc/lightdm/lightdm.conf
 	fi
 
-	if [ "$UNAME_S" = "SunOS" ]; then
-		if [ ! -d /etc/dt/config ]; then
-			echo ... Creating /etc/dt/config/ directory ...
-			mkdir -p /etc/dt/config
-			chmod 755 /etc/dt/config
-		fi
 
-		if [ ! -f /etc/dt/config/Xsetup ]; then
-			if [ -f /usr/dt/config/Xsetup ]; then
-				echo ... Copying /usr/dt/config/Xsetup to /etc/dt/config/Xsetup ...
-				cp /usr/dt/config/Xsetup /etc/dt/config/Xsetup
-			fi
-		else
-			backup /etc/dt/config/Xsetup
-		fi
-		if [ -f /etc/dt/config/Xsetup ]; then
-			addvglgenkey /etc/dt/config/Xsetup bottom
-		fi
-
-		if [ ! -f /etc/dt/config/Xconfig ]; then
-			if [ -f /usr/dt/config/Xconfig ]; then
-				echo ... Copying /usr/dt/config/Xconfig to /etc/dt/config/Xconfig ...
-				cp /usr/dt/config/Xconfig /etc/dt/config/Xconfig
-			fi
-		else
-			backup /etc/dt/config/Xconfig
-		fi
-		if [ -f /etc/dt/config/Xconfig ]; then
-			echo ... Setting Dtlogin\*grabServer to False in /etc/dt/config/Xconfig ...
-			replaceline /etc/dt/config/Xconfig Dtlogin\\*grabServer "Dtlogin\*grabServer: False"
-		fi
-		if [ -f /etc/dt/config/Xconfig.SUNWut.prototype ]; then
-			backup /etc/dt/config/Xconfig.SUNWut.prototype
-			echo ... Setting Dtlogin\*grabServer to False in /etc/dt/config/Xconfig.SUNWut.prototype ...
-			replaceline /etc/dt/config/Xconfig.SUNWut.prototype Dtlogin\\*grabServer "Dtlogin\*grabServer: False"
-		fi
-
-	fi
-
-	for file in /etc/X11/xdm/Xservers \
-		/etc/X11/gdm/gdm.conf \
-		/etc/gdm/custom.conf \
-		/usr/local/etc/gdm/custom.conf \
-		/etc/gdm/gdm.conf \
-		/etc/X11/gdm/custom.conf \
-		/etc/opt/gnome/gdm/gdm.conf \
-		/etc/opt/kde3/share/config/kdm/Xservers; do
-		if [ -f $file -a ! -h $file ]; then
-			if [ "$DISABLEXTEST" = "1" ]; then
-				disablextest $file
-			else
-				enablextest $file
-			fi
-		fi
-	done
-	if [ -f /etc/gdm/gdm-cdd.conf ]; then
-		if [ "$DISABLEXTEST" = "1" ]; then
-			disablextest /etc/gdm/gdm-cdd.conf
-		else
-			enablextest /etc/gdm/gdm-cdd.conf
-		fi
-	fi
-	for file in /etc/kde4/kdm/kdmrc \
-		/etc/kde/kdm/kdmrc \
-		/usr/share/config/kdm/kdmrc \
-		/usr/local/kde4/share/config/kdm/kdmrc; do
-		if [ -f $file -a ! -h $file ]; then
-			if [ "$DISABLEXTEST" = "1" ]; then
-				disablextestkdm $file
-			else
-				enablextestkdm $file
-			fi
-		fi
-	done
-	if [ "$UNAME_S" = "SunOS" ]; then
-		if [ "$DISABLEXTEST" = "1" ]; then
-			if [ ! -f /etc/dt/config/Xservers ]; then
-				if [ -f /usr/dt/config/Xservers ]; then
-		 			echo ... Copying /usr/dt/config/Xservers to /etc/dt/config/Xservers ...
-					cp /usr/dt/config/Xservers /etc/dt/config/Xservers
-				fi
-			fi
-			if [ -f /etc/dt/config/Xservers ]; then
-				disablextest /etc/dt/config/Xservers
-			fi
-			if [ -x /usr/sbin/svccfg ]; then
-				/usr/sbin/svccfg -s application/x11/x11-server delpropvalue options/server_args "*-tst*" 2>&1 >/dev/null
-				/usr/sbin/svccfg -s application/x11/x11-server addpropvalue options/server_args -tst 2>&1 >/dev/null
-			fi
-		else
-			if [ -f /etc/dt/config/Xservers ]; then
-				enablextest /etc/dt/config/Xservers
-			fi
-			if [ -x /usr/sbin/svccfg ]; then
-				/usr/sbin/svccfg -s application/x11/x11-server delpropvalue options/server_args "*-tst*" 2>&1 >/dev/null
-			fi
-		fi
-	fi
-
-	if [ "$UNAME_S" = "Linux" ]; then
-		if [ -f /etc/inittab ]; then
-			echo ... Setting default run level to 5 \(enabling graphical login prompt\) ...
-			replaceline /etc/inittab "id:[0-9]:initdefault:" "id:5:initdefault:"
-		fi
+	if [ "$DISABLEXTEST" = "1" ]; then
+		disablextest
+	else
+		enablextest
 	fi
 
-	for file in /etc/X11/gdm/gdm.conf \
-		/etc/gdm/custom.conf \
-		/usr/local/etc/gdm/custom.conf \
-		/etc/gdm/gdm.conf \
-		/etc/X11/gdm/custom.conf \
-		/etc/opt/gnome/gdm/gdm.conf; do
-		if [ -f $file -a ! -h $file ]; then
-			disallowgdmtcp $file
-		fi
-	done
-	if [ -f /etc/gdm/gdm-cdd.conf ]; then
-		disallowgdmtcp /etc/gdm/gdm-cdd.conf
+	if [ -f /etc/gdm/custom.conf -a ! -h /etc/gdm/custom.conf ]; then
+		disallowgdmtcp /etc/gdm/custom.conf
 	fi
 
 	echo
